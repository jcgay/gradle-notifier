plugins {
    id "com.gradle.plugin-publish" version "0.9.8"
    id 'com.github.kt3k.coveralls' version '2.8.1'
    id "com.bmuschko.nexus" version "2.3.1"
    id "pl.allegro.tech.build.axion-release" version "1.8.1"
    id "com.jfrog.bintray" version "1.7.3"
    id 'com.github.ben-manes.versions' version '0.15.0'
    id "io.codearte.nexus-staging" version "0.11.0"
}

apply plugin: 'groovy'
apply plugin: 'jacoco'

group = 'fr.jcgay'

scmVersion {
    tag {
        prefix = 'v'
        versionSeparator = ''
        deserialize = { config, position, tagName -> if (tagName.count('.') == 1) "$tagName.0" - 'v' else tagName - 'v' }
    }
}

project.version = scmVersion.version

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    compile group: 'fr.jcgay.send-notification', name: 'send-notification', version: '0.13.0'

    testCompile group: 'org.assertj', name: 'assertj-core', version: '1.7.1'
    testCompile(group: 'org.spockframework', name:'spock-core', version: '1.1-groovy-2.4') {
        exclude group:'org.codehaus.groovy'
    }
    testCompile group: 'com.netflix.nebula', name: 'nebula-test', version: '6.1.2'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.16.1'
    testRuntime group: 'cglib', name: 'cglib-nodep', version: '3.2.5'
}

test {
    jvmArgs "-XX:MaxPermSize=256m"
}

release.dependsOn build

uploadArchives.doFirst {
    if (!project.properties.keySet().containsAll('nexusUsername', 'nexusPassword')) {
        throw new StopExecutionException("Nexus authentication is not correctly defined, set 'nexusUsername' and 'nexusPassword' properties")
    }
}

publishPlugins.doFirst {
    if (!project.properties.keySet().containsAll('gradle.publish.key', 'gradle.publish.secret')) {
        throw new StopExecutionException("Gradle plugin portal credentials not correctly defined, set 'gradle.publish.secret' and 'gradle.publish.secret' properties")
    }
}

bintrayUpload.doFirst {
    if (!project.properties.keySet().containsAll('bintrayUsername', 'bintrayKey')) {
        throw new StopExecutionException("Bintray credentials not correctly defined, set 'bintrayUsername' and 'bintrayKey' properties")
    }
}

task('publish', dependsOn: [uploadArchives, closeAndReleaseRepository, publishPlugins, bintrayUpload])
closeAndReleaseRepository.mustRunAfter uploadArchives
publishPlugins.mustRunAfter uploadArchives
bintrayUpload.mustRunAfter uploadArchives

modifyPom {
    project {
        name 'gradle-notifier'
        packaging 'jar'
        description 'A plugin to have desktop notification when a build ends'
        url 'https://github.com/jcgay/gradle-notifier'

        scm {
            connection 'scm:git:git://github.com/jcgay/gradle-notifier.git'
            developerConnection 'scm:git:git@github.com:jcgay/gradle-notifier.git'
            url 'https://github.com/jcgay/gradle-notifier.git'
        }

        licenses {
            license {
                name 'The MIT License'
                url 'http://opensource.org/licenses/MIT'
            }
        }

        developers {
            developer {
                id 'jcgay'
                name 'Jean-Christophe Gay'
                email 'contact@jeanchristophegay.com'
            }
        }
    }
}

pluginBundle {
    website = 'https://github.com/jcgay/gradle-notifier'
    vcsUrl = 'https://github.com/jcgay/gradle-notifier'
    description = 'A plugin to have desktop notification when a build ends'
    tags = ['notification', 'desktop', 'growl', 'snarl', 'notification center', 'anybar', 'notify-send', 'pushbullet', 'toaster']

    plugins {
        gradleNotifierPlugin {
            id = 'fr.jcgay.gradle-notifier'
            displayName = 'Gradle Notifier'
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

bintray {
    user = project.properties['bintrayUsername']
    key = project.properties['bintrayKey']
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'gradle-notifier'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/jcgay/gradle-notifier.git'
        version {
            name = project.version
            desc = "Gradle Notifier ${project.version}"
            vcsTag = "v${project.version}"
        }
    }
}
